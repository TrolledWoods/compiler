// An external module is just a "library"
// that is defined externally. It is going to have
// some routines that are indexed, and that can be called
// from the runtime in here!
// extern io;
// use io::print;

main :: () {
	x := 1;
	x += 2;
};

// //mult_with_add :: (a: u32, b: u32) -> u32 {
// 	if b == 0 {
// 		0
// 	}else{
// 		mult_with_add(a, b - 1) + a
// 	}
// };
// 
// // export functions cannot have generics.
// // That is because normal functions are compiled
// // for every unique combination of generics supplied
// // when calling them
// // (if no generics, then they are generated when called)
// // These are basically "entry points" for the compilation
// // of functions and also define the rest of the program
// // that has to be included in the binary
// main :: export () {
// 	println("hello world!");
// };
